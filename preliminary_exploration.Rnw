\documentclass[12pt, a4paper]{article}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage[utf8]{inputenc}
\usepackage[UKenglish]{isodate}
\usepackage{wordlike} 
\usepackage{hyperref}

\setlength{\parindent}{0pt}
\setlength{\parskip}{1ex}

<<setup, include=FALSE, purl=FALSE>>=
require(knitr)
opts_chunk$set(size = 'footnotesize',
               message=FALSE,
               warning=FALSE,
               include=TRUE,
               echo=FALSE,
               dev=c('pdf', 'png'))
options(scipen=999)
@

\title{Preliminary Exploration}
\author{Joe J Collins}
\date{\today}

\begin{document}

\maketitle

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Data Preparation}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<read in data>>=
# Import the water inflow sample data
samples <- read.csv("./water_inflow_data.csv",  stringsAsFactors = FALSE)

# Rename all the measurements for easier reading
rn <- function(old.name, new.name){
  names(samples)[names(samples) == old.name] <<- new.name
}

rn("Flow.rate..litres.sec.", "Flow")

rn("BOD.5.Day.ATU..mg.l.", "BOD")
rn("Nitrogen...Total.as.N..mg.l.", "Nitrogen.Total")
rn("Phosphorus...Total.as.P..mg.l.", "Phosphorus")
rn("Alkalinity.to.pH.4.5.as.CaCO3..mg.l.", "Alkalinity")
rn("Ammoniacal.Nitrogen.as.N..mg.l.", "Nitrogen.Ammoniacal")
rn("Chloride..mg.l.", "Chloride")
rn("Nitrite.as.N..mg.l.", "Nitrite")
rn("Nitrogen...Total.Oxidised.as.N..mg.l.", "Nitrogen.Oxidised")
rn("Orthophosphate..reactive.as.P..mg.l.", "Orthophosphate")
rn("Silicate..reactive.as.SiO2..mg.l.", "Silicate")
rn("Phosphate...Total.as.P..mg.l.", "Phosphate")
rn("Conductivity.at.20C..uS.cm.", "Conductivity")
rn("Turbidity..NTU.", "Turbidity")
rn("Solids..Suspended.at.105.C..mg.l.", "Solids")
rn("Calcium..mg.l.", "Calcium")
rn("Magnesium..mg.l.", "Magnesium")
rn("Potassium..mg.l.", "Potassium")
rn("Sodium..mg.l.", "Sodium")

# Also remane the comment because it actually contains the site name
rn("Comment", "Name")
@

The data set is reasonbly consistent consisting of \Sexpr{nrow(samples)} observations.
However a couple of inconsistencies in the dates and one of the grid references has a typo in it.
The grid reference for `Brown Moss inflow to Pool 10' should read SJ5\underline{6}51039415.

<<data corrections>>=
# Make the date text consistent so they can be converted more easily to date objects.
samples$Sample.taken <- gsub("Nov", "NOV", samples$Sample.taken, fixed = TRUE)
samples$Sample.taken <- gsub(".", ":", samples$Sample.taken, fixed = TRUE)
samples$Sample.taken <- gsub("01/06/2015", "01-JUN-15", samples$Sample.taken, fixed = TRUE)

# The dates are also ambiguous so stick in the century using a regex and remove the time
# of dat because it is not needed.
samples$Sample.taken <- gsub("(\\d{2}-[A-Z]{3}-)", "\\120", samples$Sample.taken, perl = TRUE)
samples$Sample.taken <- strptime(samples$Sample.taken, "%d-%b-%Y %H:%M")
samples$Sample.taken <- as.Date(samples$Sample.taken)
samples$Sample.taken <- as.POSIXct(samples$Sample.taken, "%d-%b-%Y")

# Remove the spaces from the grid references then correct the defect.
samples$Grid.reference <- gsub(" ", "", samples$Grid.reference, fixed = TRUE)
samples$Grid.reference <- gsub("SJ5051039415", "SJ5651039415", samples$Grid.reference, fixed = TRUE)
@

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Locations}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

There are a total of \Sexpr{length(unique(samples$Name))} sites,
located using Ordnance Survey National Grid.
In order to map the sites on Google Maps they were
geocoded using 
\href{http://gridreferencefinder.com/batchConvert/batchConvert.php}{Grid Reference Finder}.

<<export site list>>=
# How many pairs of comments and grid references?
sites <- data.frame(OSGrid = samples$Grid.reference, Name = samples$Name)
sites <- unique(sites)

# Give each of the sites a unique id (might come in handy later)
sites$Id <- seq.int(nrow(sites))

# Export the sites list so WGS84 can be added to it
write.table(sites, "sites.csv", row.names = FALSE, col.names = TRUE, sep = ",")

# Import the geocoded sites
sites <- read.csv("./sites_with_locations.csv", header = TRUE, stringsAsFactors = FALSE)
@


<<overview of sites, fig.cap = 'The sites are in three clusters in North Shropshire.'>>=
# Cluster using Partitioning Around Medoids because k-means includes
# a randomised element so it can mess up periodically
library(cluster)
pam <- pam(cbind(sites$X, sites$Y), 3)
# Get a map of the area and plot sites
library(ggmap)
map_centre <- c(lon = -2.85, lat = 52.80) # chosen by inspection
map <- qmap(map_centre) 
map + geom_point(aes(x=Lng, y=Lat), data=sites, col = pam$clustering)
@

<<marton pool cluster, fig.cap="There are 10 sites around Marton Pool.">>=
map_centre <- c(lon = -3.045, lat = 52.623) # chosen by inspection
map <- qmap(map_centre, zoom = 15) 
map + geom_point(aes(x=Lng, y=Lat), data=sites, col = pam$clustering)
@

<<brown moss cluster, fig.cap="There are 8 sites around Brown Moss.">>=
map_centre <- c(lon = -2.653, lat = 52.950) # chosen by inspection
map <- qmap(map_centre, zoom = 15) 
map + geom_point(aes(x=Lng, y=Lat), data=sites, col = pam$clustering)
@

<<ellesmere cluster, fig.cap="There are 12 sites near Ellesmere (Whitemere, Colemere and Crosemere.">>=
map_centre <- c(lon = -2.850, lat = 52.883) # chosen by inspection
map <- qmap(map_centre, zoom = 13) 
map + geom_point(aes(x=Lng, y=Lat), data=sites, col = pam$clustering)
@



\end{document}